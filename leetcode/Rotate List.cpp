/** * Definition for singly-linked list. * struct ListNode { *     int val; *     ListNode *next; *     ListNode(int x) : val(x), next(NULL) {} * }; */class Solution {public:    ListNode *rotateRight(ListNode *head, int k) {        if(head==NULL)            return head;        ListNode *h=head,*f=head;        int len=0;        while(h!=NULL){            ++len;            h=h->next;        }        k=len-k%len;        h=head;        while(h!=NULL){            if(k==1)                f=h;            if(h->next==NULL)                break;            h=h->next;            --k;        }      //  cout<<f->val<<h->val<<endl;        if(f->next!=NULL){            h->next=head;            head=f->next;            f->next=NULL;        }        return head;    }};