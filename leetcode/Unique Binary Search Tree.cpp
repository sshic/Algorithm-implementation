#include <iostream>#include <vector>#include <cstring>#include <queue>using namespace std;struct ListNode {    int val;    ListNode *next;    ListNode(int x) : val(x), next(NULL) {}};struct TreeNode {    int val;    TreeNode *left;    TreeNode *right;    TreeNode(int x) : val(x), left(NULL), right(NULL) {}};class Solution {public:    int numTrees(int n) {        int result=0;        if(n==0)            return 0;        if(n==1)            return 1;        if(n==2)            return 2;        for(int i=1;i<=n;i++){            if(i==1)                result+=numTrees(n-1);            else if(i==n)                result+=numTrees(n-1);            else                result+=numTrees(i-1)*numTrees(n-i);            cout<<result<<endl;        }        return result;    }};int main(){    TreeNode t1(2);    TreeNode t2(1);    t1.right=&t2;    TreeNode t3(3);    t1.left=&t3;    //TreeNode t4(3);    //t3.right=&t4;    vector<int> in;    in.push_back(2);    in.push_back(1);    in.push_back(3);    vector<int> post;    post.push_back(1);    post.push_back(2);    post.push_back(3);    Solution s;    bool f;    cout<<s.numTrees(6)<<endl;; /*   if(f)        cout<<"true"<<endl;    else cout<<"false"<<endl;   */    return 0;}