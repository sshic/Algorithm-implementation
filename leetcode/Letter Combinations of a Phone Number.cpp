#16 mili secs for large data setclass Solution {public:    vector<string> result;    int n;    string dig;    void dfs(string str,int num){        if(num==n){            result.push_back(str);            return;        }        char t,t1,t2,t3;        if(dig[num]>='2'&&dig[num]<='6')            t='a'+(dig[num]-'2')*3;        else if(dig[num]=='7'){            t='p'+(dig[num]-'7')*4;            t3=t+3;            dfs(str+t3,num+1);        }        else if(dig[num]=='8'){            t='t';        }        else if(dig[num]=='9'){            t='w';            t3=t+3;            dfs(str+t3,num+1);        }        t1=t+1,t2=t+2;        dfs(str+t,num+1);        dfs(str+t1,num+1);        dfs(str+t2,num+1);        return;    }    vector<string> letterCombinations(string digits) {        result.clear();        n=digits.length();        dig=digits;        dfs("",0);        return result;    }};