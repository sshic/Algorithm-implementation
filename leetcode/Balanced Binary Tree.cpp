#include <iostream>#include <vector>#include <cstring>using namespace std;struct TreeNode {    int val;    TreeNode *left;    TreeNode *right;    TreeNode(int x) : val(x), left(NULL), right(NULL) {}};class Solution {public:    bool flag;    int t;    int height_margin(TreeNode * root){        if(root==NULL)            return 0;        if(root->left==NULL&&root->right==NULL)            return 1;        int t1=height_margin(root->left)+1;        int t2=height_margin(root->right)+1;        t=t1-t2;        t=t>0 ? t:-t;        if(t>1)            flag=false;        return t1>t2 ? t1:t2;    }    bool isBalanced(TreeNode *root) {        flag=true;        height_margin(root);        if(flag)            return true;        else return false;    }};int main(){    TreeNode t1(1);    TreeNode t2(2);    t1.right=&t2;    TreeNode t3(3);    t2.right=&t3;    Solution s;    bool f=s.isBalanced(&t1);    if(f)        cout<<"true"<<endl;    else cout<<"false"<<endl;    return 0;}