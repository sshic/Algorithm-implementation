class Solution {public:    vector<Interval> insert(vector<Interval> &intervals, Interval newInterval) {        int s=newInterval.start,e=newInterval.end;        vector<Interval> result;        if(intervals.size()==0){            result.push_back(newInterval);            return result;        }        vector<int> overlap;        int first=-1,last=-1,pos=0;        for(int i=0;i<intervals.size();i++){            if(intervals[i].end<s)                ++pos;            if((s>=intervals[i].start&&s<=intervals[i].end)||(e>=intervals[i].start&&e<=intervals[i].end)||(intervals[i].start>=s&&intervals[i].end<=e)){                if(first==-1)                    first=last=i;                else last=i;            }        }        if(first!=-1){            newInterval.start=min(intervals[first].start,s);            newInterval.end=max(intervals[last].end,e);            for(int i=0;i<first;i++)                result.push_back(intervals[i]);            result.push_back(newInterval);            for(int i=last+1;i<intervals.size();i++)                result.push_back(intervals[i]);            return result;        }        else{            for(int i=0;i<intervals.size();i++){                if(i==pos)                    result.push_back(newInterval);                result.push_back(intervals[i]);            }            if(result.size()==intervals.size())                result.push_back(newInterval);            return result;        }    }};