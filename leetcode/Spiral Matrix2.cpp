class Solution {public:    vector<vector<int> > generateMatrix(int n) {        vector<vector<int> > result;        for(int i=0;i<n;i++){            vector<int> newV;            for(int j=0;j<n;j++){                newV.push_back(0);            }            result.push_back(newV);        }        if(n==0)            return result;        for(int i=0;i<(n+1)/1;i++){            if(2*(i+1)-1==n){                if(i==0)                    result[i][i]=1;                else result[i][i]=result[i][i-1]+1;                return result;            }            if(2*(i+1)==n){                if(i==0)                    result[i][i]=1;                else result[i][i]=result[i][i-1]+1;                result[i][i+1]=result[i][i]+1;                result[i+1][i+1]=result[i][i]+2;                result[i+1][i]=result[i][i]+3;                return result;            }            for(int j=i;j<=n-i-1;j++){                if(i==0&&j==0)                    result[i][j]=1;                else result[i][j]=result[i][j-1]+1;            }            for(int j=i+1;j<=n-i-1;j++){                result[j][n-i-1]=result[j-1][n-i-1]+1;            }            for(int j=n-i-2;j>=i;j--){                result[n-i-1][j]=result[n-i-1][j+1]+1;            }            for(int j=n-i-2;j>=i+1;j--){                result[j][i]=result[j+1][i]+1;            }        }    }};