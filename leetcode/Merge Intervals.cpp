class Solution {public:    vector<Interval> merge(vector<Interval> &intervals) {        vector<Interval> result;        if(intervals.size()==0){            return result;        }        Interval tmp;        for(int i=0;i<intervals.size();i++){            tmp=intervals[i];            int k=i;            for(int j=i;j<intervals.size();j++){                if(intervals[j].start<tmp.start){                    tmp=intervals[j];                    k=j;                }            }            if(k!=i){                intervals[k]=intervals[i];                intervals[i]=tmp;            }        }        result.push_back(intervals[0]);        for(int i=1;i<intervals.size();i++){            int s=result[result.size()-1].start,e=result[result.size()-1].end;            if((s>=intervals[i].start&&s<=intervals[i].end)||(e>=intervals[i].start&&e<=intervals[i].end)||(intervals[i].start>=s&&intervals[i].end<=e)){                result[result.size()-1].start=min(intervals[i].start,s);                result[result.size()-1].end=max(intervals[i].end,e);            }            else result.push_back(intervals[i]);        }        return result;    }};